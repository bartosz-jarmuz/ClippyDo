<Window x:Class="ClippyDo.App.Wpf.Features.Picker.PickerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="ClippyDo"
        Width="720"
        Height="480"
        WindowStyle="None"
        ResizeMode="NoResize"
        AllowsTransparency="False"
        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
        Topmost="False"
        ShowInTaskbar="False"
        FocusManager.FocusedElement="{Binding ElementName=SearchBox}">

  <!-- Custom chrome -->
  <WindowChrome.WindowChrome>
    <WindowChrome CaptionHeight="36"
                         ResizeBorderThickness="6"
                         GlassFrameThickness="0"
                         CornerRadius="0"
                         UseAeroCaptionButtons="False" />
  </WindowChrome.WindowChrome>

  <!-- Input: Enter/Shift+Enter to VM, F3 preview.
         NOTE: Esc is handled by the hidden IsCancel button; we REMOVE the Esc KeyBinding to avoid designer quirks. -->
  <Window.InputBindings>
    <KeyBinding Key="Enter" Command="{Binding PasteSelectedCommand}" />
    <KeyBinding Key="Enter" Modifiers="Shift" Command="{Binding PastePlainSelectedCommand}" />
    <KeyBinding Key="F3" Command="{Binding PreviewCommand}" />
  </Window.InputBindings>

  <Window.Resources>
    <!-- Titlebar button styles -->
    <Style x:Key="TitlebarButton" TargetType="Button">
      <Setter Property="Padding" Value="0"/>
      <Setter Property="Width"   Value="28"/>
      <Setter Property="Height"  Value="28"/>
      <Setter Property="Margin"  Value="0,4,4,4"/>
      <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
      <Setter Property="Focusable" Value="False"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Button">
            <Border CornerRadius="4"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
              <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#11000000"/>
              </Trigger>
              <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#22000000"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="TitlebarToggleButton" TargetType="ToggleButton">
      <Setter Property="Padding" Value="0"/>
      <Setter Property="Width"   Value="28"/>
      <Setter Property="Height"  Value="28"/>
      <Setter Property="Margin"  Value="0,4,4,4"/>
      <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
      <Setter Property="Focusable" Value="False"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ToggleButton">
            <Border x:Name="Bd"
                                CornerRadius="4"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
              <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Bd" Property="Background" Value="#11000000"/>
              </Trigger>
              <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Bd" Property="Background" Value="#22000000"/>
              </Trigger>
              <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Bd" Property="Background" Value="#22007ACC"/>
                <Setter Property="Foreground" Value="White"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <!-- Item template (adjust to your item VM) -->
    <DataTemplate x:Key="ClipItemTemplate">
      <Grid Margin="6,4">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="24"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <TextBlock Grid.Column="0"
                           VerticalAlignment="Center"
                           Margin="0,0,8,0"
                           Text="{Binding KindGlyph}" />

        <StackPanel Grid.Column="1" Orientation="Vertical">
          <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" FontWeight="SemiBold"/>
          <TextBlock Text="{Binding Subtitle}" TextTrimming="CharacterEllipsis"
                               Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" FontSize="11"/>
        </StackPanel>

        <ToggleButton Grid.Column="2"
                              Margin="8,0,0,0"
                              IsChecked="{Binding IsPinned}"
                              Command="{Binding DataContext.PinToggleCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                              CommandParameter="{Binding}"
                              ToolTip="Pin/unpin"
                              Width="20" Height="20">
          <TextBlock Text="📌"/>
        </ToggleButton>
      </Grid>
    </DataTemplate>

    <!-- ListBox item visuals -->
    <Style TargetType="ListBoxItem">
      <Setter Property="Padding" Value="0"/>
      <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="MinHeight" Value="30"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ListBoxItem">
            <Border x:Name="Bd" Background="Transparent">
              <ContentPresenter />
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
              </Trigger>
              <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Bd" Property="Background" Value="#10000000"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </Window.Resources>

  <!-- Solid layout: explicit rows so title bar is ALWAYS visible -->
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="36"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>

    <!-- Hidden cancel button: Esc closes the window automatically -->
    <Button x:Name="__CancelButton"
                Visibility="Collapsed"
                IsCancel="True"
                Command="{x:Static SystemCommands.CloseWindowCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}" />

    <!-- Title bar -->
    <DockPanel Grid.Row="0"
                   Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                   LastChildFill="True">
      <StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
        <!-- Filters -->
        <ToggleButton Style="{StaticResource TitlebarToggleButton}"
                              ToolTip="Show only numbers"
                              Command="{Binding ToggleNumbersFilterCommand}">
          <TextBlock Text="#"/>
        </ToggleButton>
        <ToggleButton Style="{StaticResource TitlebarToggleButton}"
                              ToolTip="Show only images"
                              Command="{Binding ToggleImagesFilterCommand}">
          <TextBlock Text="🖼"/>
        </ToggleButton>
        <ToggleButton Style="{StaticResource TitlebarToggleButton}"
                              ToolTip="Show only paths"
                              Command="{Binding TogglePathsFilterCommand}">
          <TextBlock Text="📁"/>
        </ToggleButton>
        <ToggleButton Style="{StaticResource TitlebarToggleButton}"
                              ToolTip="Apply custom regex"
                              Command="{Binding ToggleCustomRegexFilterCommand}">
          <TextBlock Text=".*"/>
        </ToggleButton>

        <!-- Close -->
        <Button Style="{StaticResource TitlebarButton}"
                        ToolTip="Close"
                        Command="{x:Static SystemCommands.CloseWindowCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}">
          <TextBlock Text="✕"/>
        </Button>
      </StackPanel>

      <!-- Search -->
      <Grid Margin="8,4">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <TextBlock Text="🔎" VerticalAlignment="Center" Margin="0,0,6,0"/>
        <TextBox x:Name="SearchBox"
                         Grid.Column="1"
                         VerticalAlignment="Center"
                         Height="24"
                         Padding="6,2"
                         Text="{Binding Query, UpdateSourceTrigger=PropertyChanged}"
                         ToolTip="Type to filter clips" />
      </Grid>
    </DockPanel>

    <!-- Content list -->
    <Border Grid.Row="1"
                BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                BorderThickness="0,1,0,0">
      <ListBox ItemsSource="{Binding Items}"
                     SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                     ItemTemplate="{StaticResource ClipItemTemplate}"
                     VirtualizingPanel.IsVirtualizing="True"
                     VirtualizingPanel.VirtualizationMode="Recycling"
                     ScrollViewer.CanContentScroll="True"
                     KeyboardNavigation.TabNavigation="Continue">
        <ListBox.ItemsPanel>
          <ItemsPanelTemplate>
            <VirtualizingStackPanel/>
          </ItemsPanelTemplate>
        </ListBox.ItemsPanel>
      </ListBox>
    </Border>
  </Grid>
</Window>
